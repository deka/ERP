export default {
  route: {
    dashboard: 'Dashboard',
    errorPages: 'Error Pages',
    page401: '401',
    page404: '404',
    nwow: 'NWOW Backstage',
    servicestatistics: 'service statistics',
    EmployeeInformation: 'Employee Information',
    NewEmployeeInformation: 'New Employee Information',
    Stockcount: 'Procurement statistics',
    stockOrderCount: 'purchase order summary',
    CheckSet: 'Detailed Settings of Quality Inspection',
    home: 'home',
    AddSupplierAdjust: 'New Supplier Price Adjustment List',
    SupplierAdjustList: 'List of Supplier Price Modifications',
    WorkDesk: 'Workbench',
    SaleMange: 'Sales control',
    CommissionList: 'Royalty Settings List',
    DriveRes: 'Cockpit',
    InventoryMange: 'inventory control',
    StockMange: 'Procurement control',
    MyPrepare: 'My to-do list',
    EmployeeInformationList: 'Employee Information List',
    EmployeeContract: 'Labor contract',
    NewEmployeeContract: 'New Labor Contract',
    EmpCategory: 'Category property settings',
    Repository: 'Warehouse information',
    NewRepository: 'New warehouse information',
    RepositoryList: 'Warehouse Information List',
    RepCategory: 'Category property settings',
    Customer: 'Customer information',
    NewCustomer: 'New Customer Information',
    CustomerList: 'Customer list',
    ManyCustomer: 'Batch Import Customer List',
    NewAgent: 'New Distributors',
    AgentList: 'Distributor List',
    CustomerCategory: 'Category property settings',
    Manyinsert: 'Import warehouse data in batches',
    Supplier: 'Supplier information',
    NewSupplier: 'New suppliers',
    SupplierList: 'Supplier List',
    SupplierCategory: 'Category property settings',
    ManySupplier: 'Batch Import Supplier',
    Product: 'Goods and materials',
    NewProduct: 'New items information',
    ProductList: 'Item Information List',
    ProductCategory: 'Category property settings',
    ManyProduct: 'Batch imported goods',
    BasicSettings: 'Basic setup',
    NumberingRules: 'Document Number Settings',
    Newadjustprice: 'New Price Change Order',
    AdjustpriceList: 'Price Change List',
    SMSModelList: 'SMS settings',
    Measurement: 'Establishment of Measurement Units',
    Commission: 'New Commission settings',
    Parameter: 'Parameter setting',
    NewApprovalProcess: 'New approval process',
    endmonth: 'Month end processing',
    BatchRules: 'Batch rule setting',
    ApprovalProcess: 'Approval process settings',
    LogisticsCar: 'Logistics information',
    AddLogisticsCar: 'New Logistics Vehicles',
    LogisticsCarlist: 'Logistics Vehicle List',
    SendCar: 'Dispatching management',
    Addsendcar: 'New Parking List',
    SendcarList: 'Parking list',
    ReturnCar: 'return management',
    Addreturncar: 'New return ticket',
    ReturncarList: 'List of return tickets',
    Regional: 'Regional management',
    Stockenter: 'Warehousing management',
    addstockenter: 'New Purchase Storage',
    Stockenterlist: 'List of Purchase Inventory Lists',
    InventoryCount: 'Stock taking',
    AddInventoryCount: 'New Inventory Inventory',
    InventoryCountList: 'Inventory List',
    Inventorydamaged: 'Inventory loss',
    AddInventorydamaged: 'New Inventory Loss Report',
    InventorydamagedList: 'Inventory loss statement list',
    WarehouseAdjust: 'Inventory files',
    locationAdjust: 'Adjustment of storehouse',
    AddInitialenter: 'Inventory Input at the Beginning of New Period',
    Enterlist: 'Initial Inventory List',
    AddLocation: 'Add cargo location',
    Dept: 'Departmental list',
    detaillist: 'Classification of goods',
    Locationlist: 'Inventory list',
    ProduceEnter: 'New production completed warehousing',
    ProduceEnterList: 'Production Completion Inventory List',
    AddOtherenter: 'New other warehouse receipts',
    OtherEnterList: 'Other Input Lists',
    StockOut: 'Outgoing management',
    UnitGroup: 'Unit of measurement group',
    AddOtherStockOut: 'New other warehouse receipts',
    OtherStockOutList: 'List of other out-of-stock lists',
    InventoryOverflow: 'Inventory overflow',
    AddInventoryOverflow: 'New Inventory Overflow Report',
    OverflowList: 'Overflow List',
    AdjustPrice: 'Price adjustment list',
    AddAdjustPrice: 'New Price Adjustment List',
    AdjustPriceList: 'Price adjustment list',
    Storagemove: 'Inventory allocation',
    AddStoragemove: 'New Inventory Allocation',
    StoragemoveList: 'Inventory Transfer Order List',
    AddMoveApplication: 'Application for new allocation',
    MoveApplicationList: 'Allocation Application List',
    StockAlarm: 'Stock early warning',
    StockAlarmList: 'Inventory Warning List',
    BatchAlarm: 'Batch Warning List',
    AddStockAlarm: 'Inventory Early Warning Settings',
    SearchStockAlarmRules: 'Inventory Warning Rules List',
    BuildUp: 'Assembly sheet',
    AddBuildUp: 'New assembly list',
    BuildUpList: 'Assembly list',
    TearDown: 'Dismantling order',
    AddTearDown: 'New disassembly list',
    TearDownList: 'Disassembly list',
    DailyAdjust: 'Daily adjustment',
    AddDailyAdjust: 'New Daily Adjustment',
    DailyAdjustList: 'Daily adjustment list',
    AddLocationAdjust: 'Adjustment of New Storage Location',
    LocationAdjustList: 'List of Library Adjustment Lists',
    Inventorydetaillist: 'Inventory Detailed Statistics',
    ProduceRequire: 'Production demand',
    MaterialsList: 'Bill of material',
    AddMaterialsList: 'New Bill of Materials',
    MaterialsListli: 'Bill of Material List',
    ProcessFile: 'Production archives',
    WorkCenter: 'Work center',
    AddWorkCenter: 'New Work Center',
    ProductionFile: 'Process files',
    AddProductionFile: 'New Process Archives',
    StandardProcess: 'Standard procedure',
    AddStandardProcess: 'New Standard Processes',
    ProducePlan: 'Master production plan',
    ProducePlanList: 'Production Planning List',
    AddProducePlan: 'New production plan',
    RequirePlan: 'material requirement planning',
    AddRequirePlan: 'New Material Requirement Plan',
    RequirePlanList: 'Material Requirement Planning List',
    ProduceTask: 'Production Task Management',
    AddProduceTask: 'New production tasks',
    ProduceTaskList: 'List of Production Tasks',
    AddProduceReport: 'Report on New Production Tasks',
    ProduceReportList: 'List of production task reports',
    AccessMaterials: 'Production Consumption Management',
    AddAccessMaterials: 'New material',
    AccessMaterialsList: 'Material list',
    AddRetreatMaterials: 'New Return List',
    RetreatMaterialsList: 'Return list',
    OutFactory: 'Outsourcing factory',
    AddOutFactory: 'New Outsourcing Plant',
    OutFactoryList: 'List of Outsourcing Factories',
    OutSourcing: 'Outsourcing list',
    AddOutSourcing: 'New Outsourcing Order',
    OutSourcingList: 'Outsourcing list',
    StockCategory: 'Category property settings',
    StockCategoryList: 'Category Attribute List',
    StockApply: 'Procurement application',
    AddStockApply: 'New Purchase Application',
    StockApplyList: 'Purchasing Application List',
    StockRequire: 'Procurement demand',
    StockPlan: 'Purchase plan',
    selfCheck: 'Self inspection management',
    AddStockPlan: 'New Purchasing Plan',
    StockPlanList: 'Purchasing Plan List',
    StockInquiry: 'Purchase enquiry',
    AddStockInquiry: 'New Purchase Inquiry',
    StockInquiryList: 'Purchasing Inquiry List',
    StockContract: 'Procurement contract',
    AddStockContract: 'New Purchasing Contract',
    StockContractList: 'List of Purchasing Contracts',
    StockOrder: 'Purchase order',
    AddStockOrder: 'New purchase order',
    StockOrderList: 'Purchasing Order List',
    StockArrival: 'Purchase and arrival',
    AddStockArrival: 'New purchase arrival',
    StockArrivalList: 'Purchase arrival list',
    StockRetreat: 'Purchase returns',
    AddStockRetreat: 'Return of new purchases',
    StockRetreatList: 'Purchase Return List',
    StockQuery: 'Procurement enquiry',
    StockPrice: 'Purchasing Price Analysis',
    StockCount: 'Purchasing Summary Query',
    ArrivalSummary: 'Arrival summary inquiry',
    OnSummary: 'On-the-way goods inquiry',
    payment: 'Payment form',
    AddPayment: 'New Payment Form',
    paymentList: 'Bill of Payment List',
    AdvancePay: 'Advance charge',
    AddAdvancePay: 'New advance payment',
    AdvancePayList: 'Advance Payment List',
    ShouldPayList: 'Payable List',
    Invoice: 'control over invoices',
    AddInvoice: 'New invoice',
    InvoiceList: 'Invoice list',
    SaleCategory: 'Categorical attribute',
    SaleCategoryList: 'Category Attribute List',
    QualityCheck: 'Quality Inspection Application Management',
    AddQualityCheck: 'New Quality Inspection Request',
    QualityCheckList: 'Quality Inspection Application List',
    CheckReport: 'Quality inspection report',
    AddCheckReport: 'New Quality Inspection Report',
    CheckReportList: 'Quality Inspection Report List',
    CheckFail: 'Unqualified Disposal Sheet',
    AddCheckFail: 'New Unqualified Disposal Sheet',
    CheckFailList: 'List of Unqualified Disposal Sheets',
    Advancemanage: 'Pre-sale management',
    AddAdvanceProduct: 'New Pre-sale Goods',
    AdvanceProductList: 'Pre-sale list',
    AddAdvanceOrder: 'New Pre-sale Order',
    AdvanceOrderList: 'Pre-sale list',
    AddPrepReturn: 'New pre-sale refund',
    PrepReturnList: 'Pre-sale refund list',
    SaleOut: 'Sales outlet',
    AddSaleOut: 'New Sales Depot',
    InventoryCategoryList: 'Category Attribute List',
    InventoryCategory: 'Categorical attribute',
    SaleOutList: 'Sales Output List',
    SaleOrder: 'Sales order',
    AddSaleOrder: 'New sales orders',
    SaleOrderList: 'Sales Order List',
    SaleReturn: 'sales return',
    AddSaleReturn: 'New Sales Return',
    SaleReturnList: 'Sales Return List',
    SalePlan: 'Sales plan',
    AddSalePlan: 'New Sales Plan',
    SalePlanList: 'Sales Planning List',
    SaleOpportunity: 'Sales opportunities',
    AddSaleOpportunity: 'New Sales Opportunities',
    SaleOpportunityList: 'Sales Opportunities List',
    SaleContract: 'sales contract',
    AddSaleContract: 'New Sales Contract',
    SaleContractList: 'Sales Contract List',
    AccessTools: 'Tool Acquisition Order',
    AddAccessTools: 'New Tool Acquisition',
    AccessToolsList: 'Tool Acquisition List',
    Repair: 'After-sale service',
    RepairList: 'After sale maintenance',
    blackList: 'Blacklist management',
    lost: 'Vehicle Loss Reporting Management',
    RepairProject: 'Maintenance item',
    income: 'Income statement',
    AddIncome: 'New Income List',
    IncomeList: 'Income List',
    Expenses: 'Bill of expenditure',
    AddExpenses: 'New Expenditure List',
    ExpensesList: 'List of Expenditure Lists',
    Transfer: 'Transfer slip',
    AddTransfer: 'New Transfer Bill',
    TransferList: 'Transfer Bill List',
    Recycling: 'Second-hand Recycling List',
    AddRecycling: 'New Used Recycling List',
    RecyclingList: 'Used Recycle List',
    PrepReceipt: 'Advance collection',
    AddPrepReceipt: 'New Advance',
    PrepReceiptList: 'Advance list',
    SmartReplenishment: 'Intelligent replenishment management',
    SmartReplenishmentList: 'Intelligent replenishment list',
    InventoryReplenishment: 'Replenishment cycle settings',
    MaintenanceRemind: 'Vehicle Maintenance Reminder',
    AddMaintenanceRemind: '新建车辆保养提醒',
    MaintenanceRemindList: 'Vehicle Maintenance Reminder List',
    CheckCategory: 'Categorical attribute',
    CheckCategoryList: 'Category Attribute List',
    InstallmentApply: 'Application by stages',
    AddInstallmentApply: 'New Stage Application',
    InstallmentApplyList: 'Stage Application List',
    ChangeCount: 'change the date',
    AddChangeCount: 'New change',
    ChangeCountList: 'List of rescheduling',
    InstallmentList: 'Staging list',
    OverdueList: 'Overdue list',
    CollectList: 'Stage Receivables List',
    AgentCollect: 'Distributor Receivables List',
    Installmentrate: 'Basic setup',
    InstallmentrateList: 'Stage Interest Rule',
    overdueFineRules: 'Rule of late payment',
    rewardRules: 'Award rules',
    Collection: 'Collection management',
    CollectionList: 'Collection list',
    AddRecoverVehicle: 'New Receiving List',
    RecoverVehicleList: 'Car receiving list',
    CustomerSurveyReport: 'Customer Survey Report',
    AddCustomerSurveyReport: 'New Customer Survey Report',
    CustomerSurveyReportList: 'Customer Survey Report List',
    Receipt: 'receipt',
    AddReceipt: 'New Receipt Form',
    ReceiptList: 'List of receipts',
    CustomerMarketing: 'Customer marketing',
    AddCustomerChat: 'New Customer Negotiation',
    CustomerChatList: 'Client negotiation list',
    AddCustomerVisit: 'New Customer Visit',
    CustomerVisitList: 'Customer Return List',
    GroupBuyRules: 'Group Purchase Rules',
    AddGroupBuyRules: 'New Group Purchase Rules',
    GroupBuyRulesList: 'List of Group Purchase Activities Rules',
    Getauthority: 'Role permissions',
    DeliverGoods: 'Distribution sheet',
    AddDeliverGoods: 'New Distribution Order',
    DeliverGoodsList: 'Distribution list',
    CarStatList: 'Vehicle usage',
    ReturnExchange: 'Exchange order',
    AddReturnExchange: 'New Exchange Bill',
    ReturnExchangeList: 'List of Exchange Bills',
    Coupon: 'Coupon',
    AddCoupon: 'New coupons',
    CouponList: 'Coupon management',
    Package: 'Package meal',
    AddPackage: 'New Combination Package',
    PackageList: 'Combination Set List',
    ProductCost: 'Product cost',
    AddProductCost: 'Cost of new products',
    ProductCostList: 'Product Cost List',
    AddStockInvoice: 'New purchase invoice',
    StockInvoiceList: 'List of purchase invoices',
    AddCostInvoice: 'New Cost Invoice',
    CostInvoiceList: 'Cost Invoice List',
    AddRedStockInvoice: 'New purchasing invoice in scarlet letter',
    CostInstall: 'Cost setting',
    SubjectFinance: 'Current account',
    countlist: 'Stock inquiry',
    SearchInventoryAlarmRules: 'List of Warning Rules for Cargo Flow',
    AddInventoryAlarm: 'New alarm rules for cargo flow',
    InventoryAlarmList: 'Alarm inquiry of cargo flow',
    inventoryAlarm: 'Alarm for cargo flow',
    offlineTask: 'Offline tasks',
    operation: 'Operation log',
    operationList: 'Operation log list',
    stockDetailCount: 'Detailed list of purchase orders',
    stockBillCount: 'Summary of purchase invoices',
    stockBillList: 'Detailed list of purchase invoices',
    stockTrackList: 'Purchasing Order Full Tracking Table',
    supplierPunishmentCount: 'Summary of Supplier Penalties',
    productStockFluid: 'Merchandise Purchase Flow Account'
  },
  navbar: {
    logOut: 'Log Out',
    dashboard: 'Dashboard',
    github: 'Github',
    screenfull: 'Screenfull',
    theme: 'Theme',
    size: 'Global Size'
  },
  login: {
    title: 'NWOW Background management system',
    logIn: 'Log in',
    username: 'Username',
    password: 'Password',
    any: 'any',
    thirdparty: 'Or connect with',
    thirdpartyTips: 'Can not be simulated on local, so please combine you own business simulation! ! !'
  },
  tagsView: {
    refresh: 'Refresh',
    close: 'Close',
    closeOthers: 'Close Others',
    closeAll: 'Close All'
  },
  stockTrackList: {

  },
  supplierPunishmentCount: {

  },
  productStockFluid: {

  },
  stockBillCount: {
    Stockenter: 'Purchase and warehousing',
    StockRetreat: 'Purchase returns',
    actualEnterQuantity: 'Actual warehousing',
    retreatrate: 'Return rate'
  },
  stockDetailCount: {
    order: 'Order goods',
    productCode: 'serial number',
    productName: 'Name of goods',
    productType: 'Model specification',
    // id: 'Manufacturer',
    unit: 'unit',
    orderQuantity: 'Number',
    totalMoney: 'Amount of money',
    taxMoney: 'Tax amount',
    heji: 'Total',
    arrivedQuantity: 'Quantity of arrived goods',
    notArrivedQuantity: 'Unarrived Quantity'
  },
  stockOrderCount: {
    type: 'Summary mode',
    date: 'Opening date',
    order: 'Order goods',
    id: 'serial number',
    name: 'Name of supplier',
    orderQuantity: 'Number',
    totalMoney: 'Amount of money',
    taxMoney: 'Tax amount',
    heji: 'Total',
    arrivedQuantity: 'Quantity of arrived goods',
    notArrivedQuantity: 'Unarrived Quantity'
  },
  operation: {
    context: 'Operation content',
    createTime: 'Operation time',
    ipAddress: 'IP address',
    module: 'Operation module',
    operatorId: 'Operator'
  },
  inventoryAlarm: {
    repositoryId: 'Warehouse',
    productCode: 'Goods coding',
    productName: 'Name of goods',
    createTime: 'Creation time',
    categoryName: 'Classification of goods',
    typeName: 'Specification type',
    stockMeasurement: 'Company',
    content: 'content',
    createDate: 'Creation time',
    upStock: 'Inventory ceiling',
    onStock: 'Existing inventory',
    safeStock: 'safety stock',
    alarmDays: 'Alarm days'
  },
  countlist: {
    existStock: 'Existing inventory',
    onStock: 'Traffic volume',
    ableStock: 'Available stock',
    safeStock: 'safety stock'
  },
  CostInstall: {
    costCode: 'Cost code',
    costCategory: 'Cost category',
    costName: 'Cost name',
    subjectId: 'Current account',
    isEffective: 'Enabled state',
    createId: 'Founder'
  },
  SubjectFinance: {
    subjectNumber: 'Subject code',
    subjectName: 'Subject name',
    itemCode: 'Subject code',
    itemName: 'Subject name',
    subjectType: 'Subject category',
    balanceTrend: 'Balance direction',
    foreignCurrencyAccount: 'Foreign currency accounting',
    businessAccount: 'Reciprocal Business Accounting',
    cashItem: 'Cash account',
    bankItem: 'Bank subjects'
  },
  StockInvoice: {
    sourceType: 'Source type',
    subject: 'Current account',
    invoiceNumber: 'Invoice number',
    invoiceType: 'Invoice type',
    supplierId: 'Supplier',
    settleMode: 'Settlement method',
    printTimes: 'Printing times',
    address: 'address',
    taxNumber: 'Tax registration number',
    createDate: 'Date of creation',
    bank: 'Bank of deposit',
    currency: 'currency',
    currencyRate: 'exchange rate',
    handlePersonId: 'Salesman',
    deptId: 'department',
    payDate: 'Date of payment',
    isRed: 'Is the scarlet letter'
  },
  CostInvoice: {
    settleMode: 'Settlement method',
    payDate: 'Date of payment',
    isInclude: 'Accrued Cost Cost',
    supplierId: 'Supplier',
    taxNumber: 'Tax registration number',
    subject: 'Current account',
    invoiceNumber: 'Invoice number',
    address: 'add',
    bank: 'Bank of deposit',
    currency: 'currency',
    currencyRate: 'exchange rate',
    handlePersonId: 'Salesman',
    deptId: 'department'
  },
  CheckSet: {
    productCode: 'Item coding',
    productName: 'Name of goods',
    itemId: 'Inspection items',
    checkTools: 'Inspection tool',
    checkContent: 'Inspection contents',
    createName: 'Founder'
  },
  SupplierAdjust: {
    title: 'Change sheet theme',
    number: 'Change Order Number',
    applyPersonId: 'Applicant',
    deptId: 'department',
    supplierId: 'Supplier',
    applyDate: 'Date of application'
  },
  UnitGroup: {
    number: 'Group Number of Measuring Units',
    groupName: 'Name of measurement unit group',
    basicUnitId: 'Basic unit of measurement',
    proportion: 'Proportion',
    unitId: 'Name of measurement unit',
    createPersonName: 'Founder',
    createDate: 'Creation time'
  },
  endmonth: {
    yearAndMonth: 'Years',
    productCode: 'Product coding',
    productName: 'Product name',
    unit: 'Company',
    beginCost: 'Initial cost',
    beginQuantity: 'Initial quantity',
    beginMoney: 'Initial amount',
    endCost: 'Final cost',
    endQuantity: 'Final quantity',
    endMoney: 'Final amount',
    color: 'colour',
    repositoryName: 'Warehouse name'
  },
  index: {
    report: 'Common reports',
    alarm: 'Stock early warning',
    apply: 'My application',
    prepare: 'My to-do list',
    more: 'More>',
    chinese: 'chinese'
  },
  Coupon: {
    name: 'Title of coupon',
    money: 'face value',
    requireMoney: 'Amount required',
    beginTime: 'Effective date',
    endTime: 'Closing date',
    beginClock: 'What time to start using',
    endClock: 'What time is the end of use',
    isDiscount: 'Is it permissible to fold up',
    isToday: 'Is it allowed to use on that day',
    applicableWeek: 'Weekly usage',
    content: 'Activity description',
    applicableRepositoryId: 'Use stores',
    applicableProductId: 'Use commodity',
    stat: 'state',
    received: 'Have received',
    used: 'Already used',
    couponStat: 'Coupon status',
    couponType: 'Types of coupons',
    totalQuantity: 'Total quantity',
    receiveQuantity: 'Quantity Received',
    effectDay: 'Effective days'
  },
  NewEmployeeInformation: {
    Maintenancetimes: 'Maintenance times',
    Delaytimes: 'Delay times',
    Regionalranking: 'Regional ranking',
    Customerevaluation: 'Customer Comprehensive Evaluation',
    Storeranking: 'Store ranking',
    Skillrating: 'Skill rating',
    Enclosure: 'Attachment information',
    isEnd: 'Is it due',
    code: 'Item coding',
    code2: 'Code',
    account: 'Employee-side login account',
    password: 'Password',
    firstname: 'Surname',
    middlename: 'Middle name',
    lastname: 'name',
    birthday: 'Birthday',
    email: 'mailbox',
    gender: 'Gender',
    male: 'M',
    female: 'W',
    certificatetype: 'Document type',
    certificatenumber: 'Certificate number',
    country: 'Work area',
    editcountry: 'Modification of work area',
    address: 'Home address',
    phone: 'Phone number',
    provinceid: 'province',
    editprovinceid: 'Modify Provinc',
    cityid: 'city',
    editcityid: 'Revision of city',
    jobnumber: 'Job number',
    postid: 'position',
    deptid: 'department',
    editregionid: 'Modification area',
    regionid: 'Respective region',
    repositoryid: 'Affiliated store',
    editrepositoryid: 'Modify store',
    contractName: 'Contract name',
    contractType: 'type of contract',
    contractAttributes: 'Contract attribute',
    SigningTime: 'Contract time',
    effectiveTime: 'entry-into-force time',
    status: 'state',
    repositoryid2: 'store',
    regionid2: 'region',
    postid2: 'position',
    deptid2: 'department',
    employeename: 'Employee name',
    time: 'Entry time',
    jobnumber2: 'Job number',
    id: 'number',
    jobNumber: 'Job number',
    account2: 'Account number',
    name: 'Full name',
    postName: 'position',
    deptName: 'Subordinate departments',
    regionName: 'Respective region',
    repositoryName: 'Affiliated store',
    createTime: 'Entry time',
    dimissionTime: 'Departure time',
    stat: 'state',
    employeeid: 'Employee name',
    typeid: 'Contract type',
    contractname: 'Contract name',
    signtime: 'Contract time',
    expiredtime: 'Due time',
    effectivetime: 'effective date',
    period: 'Contract period',
    attribute: 'Contract attribute',
    iscorrection: 'Sign of correction',
    contractstat: 'Contract status',
    trialsalary: 'Probationary wage',
    correctionsalary: 'Wage correction',
    remindpersonid: 'Reminder of expiration of contract',
    advanceday: 'Lead time',
    annex: 'Enclosure',
    contractnumber: 'Contract number',
    empnumber: 'Staff number',
    empname: 'Employee name',
    categoryname: 'Classification name',
    category: 'Name of species',
    type: 'Taxonomy',
    iseffective: 'Enabled state',
    roleName: 'Role name',
    saleQuantity: 'Sales volumes',
    saleMoney: 'sales amount',
    repoRank: 'Store ranking',
    regionRank: 'Regional ranking',
    costMoney: 'Cost sum',
    profitMoney: 'Amount of profit'
  },
  Repository: {
    repositoryName: 'Warehouse/Store Name',
    longitude: 'longitude',
    latitude: 'latitude',
    managerPeople: 'Shop Manager/Warehouse Administrator',
    createTime: 'Opening hours',
    stat: 'Enabled state',
    description: 'Warehouse description',
    regionId: 'Respective region',
    editregionId: 'Modification area',
    type: 'category',
    regionManager: 'District Manager',
    attributes: 'attribute',
    countryId: 'Country',
    provinceid: 'province',
    cityid: 'City',
    id: 'Warehouse number',
    repositoryname: 'Warehouse name',
    type2: 'Warehouse category',
    iseffective: 'Warehouse status'
  },
  Customer: {
    // financial information
    accountsDays: 'Days of account',
    settleMode: 'Settlement method',
    payMode: 'Payment method',
    currency: 'currency',
    invoiceType: 'Billing type',
    openingbank: 'Opening bank',
    accountname: 'Account name',
    account: 'Account number',
    // Auxiliary information
    establishmenttime: 'Establishment time',
    totalnumber: 'Total number of employees',
    corporaterepresentative: 'Corporate representative',
    businesslicense: 'Business license number',
    firstname: 'name',
    middlename: 'Middle name',
    lastname: 'Surname',
    phone: 'Customer phone',
    gender: 'Gender',
    countryid: 'Country',
    provinceid: 'province',
    cityid: 'city',
    level: 'Customer Quality Level',
    level2: 'Distributor Quality Level',
    address: 'Detailed add',
    repositoryid: 'Affiliated store',
    birthday: 'Birthday',
    source: 'Customer source',
    source2: 'Distributor Source',
    newold: 'New and old customers',
    customertype: 'Distributor type',
    customertype2: 'Customer type',
    customername: 'Customer name',
    id: 'number',
    point: 'integral',
    createTime: 'Date of creation',
    agentname: 'Dealer name',
    pinyin: 'Ren Ping',
    discount: 'Customer discount',
    discount2: 'Distributor discount',
    introduce: 'Customer profile',
    introduce2: 'Distributor Profile',
    contactname: 'Contacts',
    phone2: 'Phone number',
    traderid: 'Salesman in charge',
    transmode: 'Mode of delivery',
    deliverymode: 'Delivery method',
    address2: 'Receiving address',
    createName: 'Founder',
    // details
    productName: 'Trade name',
    productType: 'Model',
    carCode: 'Frame number',
    recoverReason: 'Vehicle receiving reason',
    handlePersonName: 'Car collector',
    recoverDate: 'Closing time'
  },
  Supplier: {
    settleMode: 'Settlement method',
    payMode: 'Payment method',
    deliveryMode: 'Delivery method',
    punish: 'Supplier Punishment',
    supplierName: 'Name of supplier',
    typeId: 'Supplier Category',
    supplierShortName: 'Supplier Abbreviation',
    supplierIntroduction: 'Supplier Profile',
    detailAddress: 'Detailed add',
    groupId: 'Supplier grouping',
    zipCode: 'Zip code',
    contactPersonName: 'Contacts',
    contactPersonPhone: 'Telephone',
    regionId: 'Location',
    editregionId: 'Modification area',
    giveId: 'Delivery method',
    transportId: 'Mode of delivery',
    levelId: 'Supplier Quality Level',
    isHot: 'Hot-spot suppliers',
    isEffective: 'Enabled state',
    buyerId: 'Buyer',
    businessScopeIntroduction: 'Business scope',
    paymentId: 'Settlement method',
    moneyId: 'currency',
    bankName: 'Opening bank',
    accountName: 'Account name',
    account: 'Account number',
    establishDate: 'Establishment time',
    legalPerson: 'Corporate representative',
    taxNumber: 'Tax registration number',
    businessLicense: 'Business license number',
    companyTypeId: 'Unit property',
    id: 'Supplier Number',
    supplierGroup: 'New grouping',
    createTime: 'created date',
    countyrId: 'Revision of state',
    provinceId: 'Modify Province',
    cityId: 'Revision of city',
    groupName: 'Group name',
    createId: 'Archiving person',
    // Auxiliary information
    amountinvoiced: 'Total invoiced amount',
    amountpaid: 'Total amount paid',
    amountpayable: 'Total amount payable',
    orderquantity: 'Total Order Quantity'
  },
  Product: {
    unitGroupId: 'Unit of measurement group',
    stockCircle: 'Procurement cycle',
    produceAbility: 'Throughput',
    workCenterId: 'Work center',
    careCircle: 'Maintenance cycle',
    code2: 'Code',
    disposeId: 'To configure',
    versionId: 'Edition',
    diameterId: 'Diameter specification',
    lengthLevelId: 'Length class',
    faceId: 'surface treatment',
    performanceLevelId: 'Performance grade',
    effectiveDay: 'Effective days',
    code: 'Material coding',
    barcode: 'bar code',
    productname: 'Name of goods',
    typeid: 'Vehicle type',
    categoryid: 'Classification of goods',
    color: 'colour',
    brand: 'brand',
    kpigrade: 'Performance score',
    point: 'Commodity score',
    zhibaoqi: 'Warranty period',
    weight: 'Commodity weight',
    volume: 'Commodity volume',
    costprice: 'Ex factory price',
    tradeprice: 'Trade price',
    saleprice: 'retail price',
    purchaseprice: 'Purchase price',
    lowerprice: 'Minimum price',
    supplierid: 'Supplier',
    createid: 'creator',
    level: 'Grade level',
    unit: 'Company',
    purchasemeasurement: 'Basic unit of measurement',
    caigoumeasurement: 'Purchasing Measurement Unit',
    salemeasurement: 'Sales Measurement Unit',
    stockmeasurement: 'Inventory measurement unit',
    producemeasurement: 'Production Measurement Unit',
    source: 'source',
    valuation: 'Cost Accounting and Valuation',
    isactive: 'Upper and lower frames',
    picids: 'Commodity pictures',
    detailpicid: 'Detailed pictures',
    memberprice: 'Membership price',
    createTime: 'Creation time',
    title: 'Change theme',
    productname2: 'Name of goods',
    saleprice2: 'Current retail price',
    tradeprice2: 'Current wholesale price',
    costprice2: 'Current cost price',
    memberprice2: 'Current membership price',
    lowerprice2: 'Current Minimum Price',
    adjustsaleprice: 'Adjustment of Retail Price',
    adjusttradeprice: 'Adjustment of wholesale price',
    adjustcostprice: 'Adjustment of cost price',
    adjustmemberprice: 'Adjustment of membership price',
    adjustlowerprice: 'Adjust the Minimum Price',
    adjustpersonid: 'Applicant',
    adjustreason: 'Reasons for adjustment',
    productcode: 'Item coding',
    adjustnumber: 'Price Change Order Number',
    id: 'number',
    productCode: 'Item coding',
    adjustCostPrice: 'Adjusted cost price',
    adjustTradePrice: 'Adjusted wholesale price',
    adjustSalePrice: 'Adjusted retail price',
    adjustMemberPrice: 'Adjusted membership price',
    adjustLowerPrice: 'Adjusted Minimum Price',
    isBatch: 'Batch setup',
    name: 'Classification name',
    parentId: 'Parent level',
    isActive: 'Application state'
  },
  BasicSettings: {
    commissionCategory: 'Royalty category',
    ruleName: 'Numbering rule name',
    type: 'Document type',
    iseffective: 'Enabled state',
    id: 'number',
    prefix: 'Numbering prefix',
    dateType: 'Date type',
    length: 'Running water number length',
    createTime: 'Date of creation',
    modelname: 'Short Message Template Name',
    content: 'content',
    iseffective2: 'Is it enabled',
    categoryname: 'Name of measurement unit',
    type2: 'Categories of Measurement Units',
    iseffective3: 'state',
    roleId: 'Employee role',
    productCategoryId: 'Commodity category',
    commissionType: 'Royalty type',
    commissionValue: 'Royalty',
    barcode: 'bar code',
    unitOfMeasure: 'Multi-unit of measurement',
    certificate: 'Automatic generation of credentials',
    landing: 'Auto-check landing',
    inOrOutDisplay: 'Does the warehouse entry and exit show the price',
    priceOfNone: 'Allowed access price is zero',
    process_name: 'Process name',
    is_effective: 'Enabled state',
    type3: 'Document type',
    is_message: 'Do you want to send SMS',
    effect_region: 'Applicable areas',
    effect_repository: 'Applicable warehouse/store',
    batchName: 'Batch rule name',
    id2: 'number',
    isEffective: 'Process usage status',
    isMessage: 'Cell phone reminder',
    deptNo: 'Department number',
    deptName: 'Department name',
    personName: 'Founder'
  },
  LogisticsCar: {
    cartype: 'Vehicle type',
    carnumber: 'Vehicle number',
    carname: 'Vehicle name',
    licencenumber: 'License plate number',
    carload: 'load',
    stat: 'Vehicle condition',
    drivers: 'Driver',
    createid: 'Founder',
    createtime: 'Date of creation',
    sourcenumber: 'Source number number',
    outpersonid: 'Car driver',
    address: 'Delivery place',
    outphone: `Driver's telephone`,
    starttime: 'Departure time',
    outnumber: 'Parking list number',
    returnaddress: 'Return address',
    returnpersonid: 'Return vehicle',
    returntime: 'Carriage return time',
    createName: 'Registrant',
    createTime: 'Date of registration'
  },
  Stockenter: {
    heji: 'Quantity of warehousing',
    title: 'Warehousing List Theme',
    sourceNumber: 'Source number number',
    sourceType: 'Source type',
    batch: 'batch',
    supplierId: 'supplier',
    stockPersonId: 'Purchaser',
    stockDeptId: 'Purchasing Department',
    repositoryTypeId: 'Warehouse type',
    judgeStat: 'Audit status',
    createPersonId: 'Founder',
    summary: 'abstract',
    enterNumber: 'Warehouse receipt number',
    deliveryPersonId: 'Deliverer',
    acceptPersonId: 'Acceptor',
    enterDeptId: 'Warehousing Department',
    endPersonName: 'Warehousing agent',
    enterRepositoryId: 'Warehouse',
    receiptStat: 'Document Status',
    beginTime: 'start time',
    endTime: 'End time',
    repositoryId: 'Warehouse',
    productCode: 'serial number',
    locationId: 'Cargo location',
    id: 'Document number',
    productName: 'Name of goods',
    color: 'colour',
    typeId: 'Specifications',
    unit: 'Company',
    basicQuantity: 'Basic quantity',
    actualEnterQuantity: 'Actual quantity',
    enterPrice: 'Unit price of warehousing',
    taxRate: 'tax rate',
    enterMoney: 'Amount of storage',
    endDate: 'Warehousing time',
    enterQuantity: 'Quantity of warehousing',
    remarks: 'Remarks',
    processType: 'Processing category',
    produceManagerId: 'Production person in charge',
    enterPersonId: 'Warehousing agent',
    enterReason: 'Reasons for warehousing',
    newOrOld: 'Old and new logo',
    enterDate: 'Warehousing time'
  },
  StockOut: {
    title: 'Exit list theme',
    sourceNumber: 'Source number number',
    sourceType: 'Source type',
    companyId: 'Current unit',
    companyTypeId: 'Reciprocating Unit Type',
    sendAddress: 'Shipping Add',
    receiverAddress: 'Receiving address',
    outDeptId: 'Outgoing Department',
    outPersonId: 'Outgoing person',
    outDate: 'Outgoing time',
    outReasonId: 'Outgoing reason',
    judgeStat: 'state',
    outRepositoryId: 'Outgoing warehouse',
    summary: 'abstract',
    code: 'Deposit Bill Number',
    time: 'Outgoing time',
    stat: 'Document Status',
    id: 'number',
    heji: 'Outgoing quantity',
    heji2: 'Outgoing amount'
  },
  InventoryCount: {
    title: 'Inventory single theme',
    handlePersonId: 'Person in charge',
    countDeptId: 'Inventory Department',
    countRepositoryId: 'Inventory warehouse',
    countType: 'Inventory type',
    beginTime: 'Inventory start time',
    endTime: 'End time of inventory',
    Time: 'Inventory date',
    summary: 'abstract',
    id: 'number',
    locationId: 'Cargo location',
    productCode: 'Item coding',
    productName: 'Name of goods',
    color: 'colour',
    typeId: 'Specifications',
    unit: 'Company',
    price: 'Price',
    inventoryQuantity: 'Inventory quantity',
    actualQuantity: 'Quantity of firm offer',
    isOverflow: 'Is the report overflow',
    overflowQuantity: 'Reported overflow quantity',
    totalMoney: 'Total sum',
    remarks: 'abstract',
    sourceNumber: 'Source number number',
    title2: 'Inventory single theme',
    countNumber: 'Inventory List Number',
    receiptStat: 'Document Status',
    createPersonId: 'Founder',
    countperson: 'Stocktaking person',
    countdate: 'Inventory date',
    judgeStat: 'Approval status',
    heji1: 'Total inventory',
    heji2: 'Total real volume',
    heji3: 'Total difference',
    heji4: 'Total Inventory Amount',
    heji5: 'Total amount of firm offer',
    heji6: 'Total amount of difference'
  },
  Inventorydamaged: {
    id: 'number',
    title: 'Theme of loss report',
    handlePersonId: 'Person in charge',
    damagedDeptId: 'Loss reporting Department',
    damagedRepositoryId: 'Damaged warehouse',
    damagedReason: 'Reasons for reporting losses',
    damagedDate: 'Reporting loss date',
    sourceNumber: 'Source number number',
    damagedNumber: 'Loss Report Number',
    receiptStat: 'Document Status',
    createPersonId: 'Founder',
    beginTime: 'start time',
    endTime: 'End time',
    judgeStat: 'Approval status',
    heji: 'Total number of reported losses',
    heji2: 'Total reported loss amount'
  },
  WarehouseAdjust: {
    title: 'Warehousing List Theme',
    enterNumber: 'Warehouse receipt number',
    enterRepositoryId: 'Warehouse',
    enterDeptId: 'Warehousing Department',
    enterPersonId: 'Warehousing agent',
    enterDate: 'Warehousing time',
    summary: 'abstract',
    id: 'number',
    productCode: 'serial number',
    productName: 'Name of goods',
    typeId: 'Specifications',
    unit: 'Company',
    basicQuantity: 'Basic quantity',
    enterQuantity: 'Quantity of warehousing',
    price: 'Unit price of warehousing',
    totalMoney: 'Amount of storage',
    batch: 'batch',
    locationId: 'Cargo location',
    remarks: 'Remarks',
    sourceNumber: 'Source number number',
    locationCode: 'Cargo location number',
    locationName: 'Name of cargo location',
    length: 'Freight forwarding Officer',
    width: 'Cargo location width',
    height: 'High freight location',
    volume: 'Cargo location volume',
    repositoryId: 'Warehouse name',
    judgeStat: 'Approval status',
    upStock: 'Maximum inventory',
    downStock: 'Minimum stock',
    safeStock: 'safety stock',
    productId: 'commodity',
    title2: 'Single Theme of Location Adjustment',
    handlePersonId: 'Person in charge',
    adjustDeptId: 'Adjustment department',
    adjustRepositoryId: 'Adjustment of warehouse',
    adjustReason: 'Reasons for adjustment',
    adjustDate: 'adjust date',
    adjustNumber: 'Adjustment Order Number'
  },
  Inventorydetaillist: {
    repositoryId: 'Warehouse',
    code: 'Item coding',
    brand: 'brand',
    productName: 'Name of goods',
    typeId: 'Classification of goods',
    locationId: 'Cargo location number',
    productType: 'Specification type',
    beginTime: 'start time',
    endTime: 'End time',
    productCategory: 'Types of articles',
    unit: 'Company',
    tradePrice: 'Trade price',
    salePrice: 'retail price',
    repositoryName: 'Warehouse',
    locationCode: 'Cargo location',
    batch: 'batch',
    quantity: 'Inventory quantity'
  },
  InventoryOverflow: {
    title: '报溢单主题',
    overflowNumber: '报溢单编号',
    handlePersonId: '经办人',
    overflowDeptId: '报溢部门',
    overflowRepositoryId: '报溢仓库',
    summary: '摘要',
    createDate: '报溢日期',
    judgeStat: '审批状态',
    id: '编号'
  },
  AdjustPrice: {
    title: 'Price adjustment theme',
    adjustNumber: 'Adjustment Order Number',
    handlePersonId: 'Person in charge',
    adjustDeptId: 'Price adjustment department',
    adjustRepositoryId: 'Price adjustment warehouse',
    adjustDate: 'Price adjustment date',
    effectiveDate: 'effective date',
    summary: 'abstract',
    judgeStat: 'Approval status',
    reason: 'Reasons for price adjustment'
  },
  Storagemove: {
    title: 'Transfer Order Theme',
    moveNumber: 'Transfer Order Number',
    requestDeptId: 'Cargo handling department',
    moveInRepository: 'Transfer to warehouse',
    requestArrivalDate: 'Required delivery date',
    moveReason: 'Reasons for allocation',
    departmentId: 'Cargo handling department',
    moveOutRepository: 'Transfer warehouse',
    businessStat: 'Business status',
    applicationName: 'Allocation of applicants',
    judgeStat: 'Approval status',
    storageMovePerson: 'Transfer out of the Treasury',
    storageMoveDate: 'Transfer out date',
    moveoutconfirm: 'Assignment out warehouse confirmation',
    confirmOutPerson: 'Confirmation of the Treasurer',
    confirmOutDate: 'Confirmation of Deposit Date',
    confirmInDate: 'Confirmation of storage date',
    confirmInPerson: 'Confirmation of warehouser'

  },
  StockAlarm: {
    searchRepositoryId: 'Warehouse',
    code: 'Commodity code',
    productName: 'Trade name',
    createTime: 'Creation time',
    categoryName: 'Classification of goods',
    typeName: 'Specification type',
    stockMeasurement: 'Company',
    downStock: 'Lower limit of inventory',
    upStock: 'Inventory ceiling',
    onStock: 'Existing inventory',
    safeStock: 'safety stock',
    flag: 'Alarm type'
  },
  BuildUp: {
    title: 'Assemble single theme',
    buildupNumber: 'Assembly Sheet Number',
    handlePersonId: 'Person in charge',
    buildupDeptId: 'Assembly department',
    buildupRepositoryId: 'Warehouse',
    summary: 'abstract',
    buildupDate: 'Assembly date',
    judgeStat: 'Approval status'
  },
  TearDown: {
    title: 'Approval status',
    teardownNumber: 'Disassembly and Assembly Bill Number',
    handlePersonId: 'Person in charge',
    teardownDeptId: 'Assembly and disassembly Department',
    teardownRepositoryId: 'Warehouse',
    summary: 'abstract',
    teardownDate: 'Date of disassembly and assembly',
    judgeStat: 'Approval status'
  },
  DailyAdjust: {
    title: 'Daily adjustment single theme',
    number: 'Daily adjustment list number',
    personId: 'Person in charge',
    deptId: 'Adjustment department',
    repositoryId: 'Adjustment of warehouse',
    reason: 'Reasons for adjustment',
    adjustDate: 'adjust date',
    judgeStat: 'Approval status',
    heji1: 'Total adjusted quantities',
    heji2: 'Total adjusted amount'
  },
  MaterialsList: {
    bomNumber: 'BOM encoding',
    parentBomNumber: 'Superior BOM',
    bomTypeId: 'BOM type',
    isActive: 'Enabling type',
    version: 'Edition',
    summary: 'abstract',
    productName: 'Parent',
    productName2: 'Material name',
    unit: 'Company',
    productTypeId: 'Model',
    id: 'Serial number',
    judgeStat: 'Approval status',
    receiptStat: 'Document Status',
    code: 'Material coding'
  },
  ProcessFile: {
    id: 'Work Center Number',
    code: 'Work Center Number',
    workCenterName: 'Name of Work Center',
    isKey: 'Is it a key work center',
    deptId: 'Subordinate departments',
    stat: 'Enabled state',
    createrName: 'Founder',
    createTime: 'Creation time',
    code2: 'Process number',
    processName: 'Process name',
    shortName: 'Ren Ping',
    description: 'Process description',
    code3: 'Process number',
    processName2: 'Procedure name',
    workCenterId: 'Work Center',
    testMethod: 'Verification mode',
    timeUnit: 'Time unit',
    preTime: 'Preparation time',
    runTime: 'Running time',
    isCost: 'Is it billing?',
    isHelp: 'External assistance',
    timeWage: 'Hourly wages per unit',
    numberWage: 'Unit Piece Wage'
  },
  ProducePlan: {
    title: 'theme',
    planNumber: 'Production Planning Number',
    handlePersonId: 'Person in charge',
    deptId: 'Work center',
    summary: 'abstract',
    deptName: 'Work center',
    produceDeptId: 'department'
  },
  RequirePlan: {
    title: 'theme',
    handlePersonId: 'Person in charge',
    deptId: 'Work center',
    summary: 'abstract',
    produceRepositoryId: 'Warehouse',
    producePlanNumber: 'Master production plan',
    planSupplyDate: 'Planned feeding date',
    planNumber: 'Document number'
  },
  ProduceTask: {
    title: 'theme',
    sourceType: 'Source type',
    produceDeptId: 'department',
    processType: 'Processing type',
    handlePersonId: 'Person in charge',
    summary: 'abstract',
    taskNumber: 'number',
    produceTaskNumber: 'Production Task Sheet',
    workCenterId: 'Work center',
    produceDate: 'Date of manufacture',
    countFinishQuantity: 'Total Completion Number',
    countWorkHours: 'Man hour total',
    shouldPeoples: 'Number of people to be reached',
    actualPeoples: 'Actual number',
    shouldWorkHours: 'Due hour',
    overtimeHours: 'Overtime work hours',
    stopHours: 'idle time',
    effectiveHours: 'Effective working hours',
    equipmentQuantity: 'Quantity of equipment',
    actualEquipQuantity: 'Actual starting number',
    allRunTime: 'Total start-up time',
    runRate: 'Start-up rate',
    loadRate: 'Load rate',
    useRate: 'Equipment utilization rate',
    stopQuantity: 'Number of downtime',
    stopTime: 'Downtime duration',
    stopReason: 'Cause of shutdown',
    countAccess: 'Lead in total',
    countUseup: 'Total consumption',
    countRemain: 'Balance total',
    deptId: 'department',
    reportNumber: 'number'
  },
  ProduceRequire: {
    workCenterId: 'Work center',
    sourceNumber: 'Material Requirement List Number',
    productCode: 'serial number',
    productName: 'Name of goods',
    requireRepositoryName: 'Warehouse',
    productType: 'Specification type',
    color: 'colour',
    unit: 'unit',
    requireQuantity: 'Quantity to be produced',
    requireDate: 'Demand date',
    workCenterName: 'Demand date',
    issueQuantity: 'Quantity issued'
  },
  AccessMaterials: {
    title: 'theme',
    sourceType: 'Source type',
    produceTaskNumber: 'Production Task Sheet',
    processType: 'Processing type',
    accessPersonId: 'Requester',
    produceDeptName: 'department',
    accessDate: 'Material date',
    deptId: 'department',
    workCenter: 'Work center',
    accessRepositoryId: 'Material warehouse',
    taskNumber: 'Document number',
    providePersonId: 'Distributor',
    accessMaterialsId: 'Material requisition',
    retreatPersonId: 'Returned person',
    receivePersonId: 'Receiver',
    receiveDate: 'Collection time'
  },
  OutFactory: {
    code: 'Factory serial number',
    factoryName: 'Factory name',
    factoryNumber: 'Factory phone',
    factoryFax: 'Factory facsimile',
    factoryContactName: 'Contacts',
    factoryContactPhone: 'Contact telephone',
    taxNumber: 'Factory tax number',
    accountName: 'Account name',
    bankName: 'Opening bank',
    account: 'Account number',
    businessRegisterNumber: 'Industrial and Commercial Registration Number',
    productionLicense: 'Production license number',
    unitAddress: 'Unit address',
    unitEmail: 'Unit zip code',
    stat: 'state',
    receiverId: 'Consignee',
    receivePlaceCode: 'Postal code of place of receipt',
    countryId: 'Country',
    provinceId: 'province',
    cityId: 'city',
    regionId: 'area',
    receiverPhone: 'Consignee telephone',
    receiverAddress: 'Receiving address'
  },
  OutSourcing: {
    title: 'Outsourcing Single Theme',
    personId: 'operator',
    taxRate: 'tax rate',
    outFactoryId: 'Outsourcing factory',
    paymentAgreementId: 'Payment agreement',
    deadline: 'term',
    productionDate: 'Date of manufacture',
    completeDate: 'Completion date',
    billingTypeId: 'Billing type',
    giveAddress: 'Delivery address',
    moneyType: 'currency',
    thisPayment: 'Amount payable',
    heji: 'Total sum',
    paiedMoney: 'Amount paid',
    notPayMoney: 'Unpaid amount'
  },
  StockApply: {
    title: 'Subject of Purchase Request Form',
    stockType: 'Procurement category',
    applyPersonId: 'Applicant',
    applyDeptId: 'Application Department',
    sourceType: 'Source type',
    applyDate: 'Date of application',
    applyNumber: 'Document number'
  },
  StockRequire: {
    categoryId: 'Material classification',
    productName: 'Name of goods',
    isPlan: 'Have procurement plans been generated',
    materialsRequireNumber: 'Material Requirement Number',
    productCode: 'Material coding',
    productType: 'Specifications',
    color: 'colour',
    unit: 'unit',
    requireQuantity: 'Requirement',
    inventoryQuantity: 'Available stock',
    shouldStockQuantity: 'Quantity to be purchased',
    stockAdvanceday: 'Purchasing lead time',
    requireDate: 'Demand Date'
  },
  StockPlan: {
    title: 'Purchasing Planning Theme',
    stockType: 'Procurement category',
    planPersonId: 'Planner',
    stockPersonId: 'Buyer',
    stockDeptId: 'Purchasing Department',
    sourceType: 'Source single type',
    planDate: 'Planned date',
    heji1: 'Total amount',
    heji2: 'Total quantity',
    allMoney: 'Pre-controlled amount'
  },
  StockInquiry: {
    inquiryTitle: 'Purchasing Inquiry Theme',
    sourceType: 'Source single type',
    supplierId: 'Supplier',
    inquiryPersonId: 'Inquirer',
    stockTypeId: 'Procurement Categories',
    deptId: 'department',
    inquiryDate: 'Inquiry Date',
    inquiryTimes: 'Number of inquiries',
    isVat: 'Is it VAT',
    currency: 'currency',
    allMoney: 'Total amount',
    allTaxMoney: 'Total tax',
    allIncludeTaxMoney: 'Total Amount Including Tax'
  },
  StockContract: {
    contractTitle: 'Subject of procurement contract',
    sourceType: 'Source single type',
    supplierId: 'Supplier',
    stockPersonId: 'Buyer',
    stockType: 'Procurement Categories',
    deptId: 'department',
    payAddress: 'contracting place',
    signDate: 'Signing time',
    supplierContractor: 'Supplier Contractor',
    ourContractorId: 'Our Contractor',
    deliveryMode: 'Mode of delivery',
    transferId: 'Transport mode',
    settleId: 'Settlement Method',
    payId: 'Payment method',
    isVat: 'Is it VAT',
    currency: 'currency',
    allMoney: 'Total amount',
    allTaxMoney: 'Total tax',
    allIncludeTaxMoney: 'Total Amount Including Tax'
  },
  StockOrder: {
    supplierNumber: 'Supplier Order Number',
    title: 'Purchasing Order Theme',
    orderNumber: 'Purchasing Order Number',
    sourceType: 'Source single type',
    supplierId: 'Supplier',
    stockPersonId: 'Buyer',
    stockType: 'Procurement Categories',
    deptId: 'department',
    payAddress: 'contracting place',
    orderDate: 'Order date',
    supplierContractor: 'Supplier Contractor',
    signPersonId: 'Our Contractor',
    deliveryMode: 'Mode of delivery',
    transferId: 'Transport mode',
    settleMode: 'Settlement Method',
    payMode: 'Payment method',
    isVat: 'Is it VAT',
    currency: 'currency',
    allMoney: 'Total amount',
    allTaxMoney: 'Total tax',
    allIncludeTaxMoney: 'Total Amount Including Tax'
  },
  StockArrival: {
    sourceNumber: 'Source list number',
    title: 'Purchasing order subject',
    number: 'Purchase arrival number',
    sourceType: 'Source single type',
    stockTypeId: 'Procurement Categories',
    deptId: 'department',
    stockPersonId: 'Buyer',
    deliveryModeId: 'Mode of delivery',
    currencyId: 'currency',
    payId: 'Settlement Method',
    acceptPersonId: 'Acceptance',
    acceptDate: 'Date of collection',
    isVat: 'Is it VAT',
    supplierId: 'Supplier',
    arrivalDate: 'Date of arrival',
    allMoney: 'Total amount',
    allTaxMoney: 'Total tax',
    allIncludeTaxMoney: 'Total Amount Including Tax'
  },
  StockRetreat: {
    title: 'Purchasing Return Theme',
    sourceType: 'Source single type',
    sourceNumber: 'Source list number',
    stockTypeId: 'Procurement Categories',
    deptId: 'department',
    stockPersonId: 'Buyer',
    deliveryModeId: 'Mode of delivery',
    currencyId: 'currency',
    payId: 'Settlement Method',
    supplierId: 'Supplier',
    transportModeId: 'Transport mode',
    acceptAddress: 'Receiving address',
    retreatDate: 'return date',
    isVat: 'Is it VAT',
    allRetreatMoney: 'Total refundable',
    retreatRepositoryId: 'Return Warehouse'
  },
  StockQuery: {
    productName: 'Name of article',
    productCode: 'serial number',
    typeId: 'Specifications',
    unit: 'unit',
    maxPrice: 'Maximum Purchasing Price',
    minPrice: 'Minimum Purchasing Price',
    avgPrice: 'Average Purchasing Price',
    recentlyPrice: 'Recent purchase price',
    includeTaxMoney: 'Including tax price',
    orderNumber: 'Purchasing Order Number',
    orderDate: 'Date of purchase',
    stockPersonName: 'Buyer',
    supplierName: 'Supplier',
    price: 'Unit Price',
    taxRate: 'tax rate',
    includeTaxPrice: 'Including tax price',
    stockQuantity: 'Purchase Quantity',
    money: 'Purchase amount',
    supplierId: 'Supplier',
    suppilerIdNum: 'Supplier Number',
    suppilerName: 'Name of supplier',
    arrivalQuantity: 'Quantity of arrivals',
    arrivalIncludedTax: 'Amount of goods arrived with tax',
    arrivalUnIncludedTax: 'Amount of Goods Delivered by Tax',
    returnQuantity: 'Return Quantity',
    returnIncludedTax: 'Amount of refund with tax',
    returnUnIncludedTax: 'Amount of tax refund',
    sourceNumber: 'Purchasing Order Number',
    stockDate: 'Date of purchase',
    onQuantity: 'On-the-way Quantity',
    onIncludedTax: 'Amount of tax in transit',
    onUnIncludedTax: 'Amount of tax paid on the way',
    quantity: 'Number',
    totalMoney: 'Total amount',
    includeTaxMoney2: 'Total Amount Including Tax',
    includeTaxPrice2: 'Including tax price',
    includeTaxEnterMoney: 'Including tax price',
    unIncludeTaxEnterMoney: 'De-tax price'
  },
  payment: {
    title: 'Payment theme',
    applyDate: 'Date of application',
    supplierId: 'Supplier',
    moneyThis: 'Amount of payment',
    payMode: 'Payment method',
    payAccount: 'account',
    payAccountNumber: 'Account number',
    sourceType: 'Source single type',
    sourceNumber: 'Source list number',
    handlePersonId: 'Executor',
    remarks: 'Remarks',
    currency: 'currency',
    rate: 'exchange rate',
    offsetAdvance: 'Deduction of advance payment',
    paymentNumber: 'Bill of Payment Code',
    payDate: 'Date of payment',
    picids: 'Enclosure'
  },
  AdvancePay: {
    payDate: 'Prepaid date',
    stockPersonId: 'Buyer',
    supplierId: 'Supplier',
    totalMoney: 'Prepaid amount',
    currency: 'currency',
    payAccount: 'Payment account',
    settleMode: 'Settlement method',
    summary: 'abstract'
  },
  Invoice: {
    sourceType: 'Business Single Type',
    sourceNumber: 'Business Document Number',
    invoiceNumber: 'Invoice number',
    invoiceType: 'Invoice type',
    supplierId: 'Reciprocating Unit',
    totalMoney: 'Total amount',
    paidMoney: 'amount paid',
    payingMoney: 'Unpaid amount',
    handlePersonId: 'Agent',
    currency: 'currency',
    rate: 'exchange rate',
    handleDeptId: 'Agent Departments',
    isCheckin: 'Whether to Register Documents',
    makeoutDate: 'Billing time',
    receiveMode: 'Receiving mode',
    settleStat: 'Settlement Method'
  },
  ShouldPayList: {
    invoiceNumber: 'Invoice number',
    invoiceType: 'Invoice Category',
    sourceNumber: 'Source Single Coding',
    supplierId: 'Name of supplier',
    currency: 'currency',
    shouldMoney: 'Amount payable',
    paidMoney: 'Amount paid',
    payingMoney: 'Unpaid amount',
    returnOffset: 'Return deduction'
  },
  QualityCheck: {
    title: 'Subject of Quality Inspection Application Form',
    sourceType: 'Source type',
    supplierId: 'Supplier',
    checkType: 'Quality Inspection Category',
    reportPersonId: 'Inspection personnel',
    reportDeptId: 'Inspection and quarantine department',
    reportDate: 'Date of submission for inspection',
    checkMode: 'Inspection methods',
    produceManagerId: 'Production person in charge',
    workCenterId: 'Production Center'
  },
  CheckReport: {
    checkItemId: 'Inspection items',
    checkContent: 'Inspection index',
    checkTools: 'Inspection tools',
    checkQuantity: 'Quantity Declared',
    passQuantity: 'Qualified Quantity',
    failedQuantity: 'Unqualified Quantity',
    checkResult: 'Inspection results',
    remarks: 'Single conclusion',
    title: 'Theme of the report',
    sourceType: 'Source type',
    sourceNumber: 'Source list number',
    supplierId: 'Supplier',
    inspectionPersonId: 'Inspection personnel',
    inspectionDeptId: 'Inspection Department',
    checkType: 'Quality Inspection Category',
    checkMode: 'Inspection methods',
    produceManagerId: 'Production person in charge',
    workCenterId: 'Production Center',
    checkPersonId: 'Inspectors',
    checkDeptId: 'Inspection Department',
    checkDate: 'Inspection Date',
    productCode: 'serial number',
    productName: 'Name of article',
    unit: 'unit',
    typeId: 'Applicable models',
    sampleQuantity: 'Sampling Quantity',
    passRate: 'Qualification rate',
    isRecheck: 'Is there a need for review'
  },
  CheckFail: {
    title: 'Disposal Single Subject',
    sourceType: 'Source single type',
    sourceNumber: 'Quality inspection report',
    handlePersonId: 'Disposal Officer',
    handleDate: 'Date of disposal',
    productCode: 'serial number',
    productName: 'Name of article',
    unit: 'unit',
    typeId: 'Specification type',
    failedQuantity: 'Unqualified Quantity'
  },
  Advancemanage: {
    startend: 'Pre-sale time',
    starttime: 'Pre-sale start time',
    endtime: 'End time of pre-sale',
    depositTime: 'Advance Deposit Time',
    isSale: ' sell or not',
    finalTime: 'Final payment time',
    advanceEndtime: 'Ending time',
    advanceMode: 'Pre-sale mode',
    advanceStat: 'Pre-sale status',
    productName: 'Name of article',
    productCode: 'serial number',
    productType: 'Model',
    color: 'colour',
    depositBegintime: 'Deposit start time',
    depositEndtime: 'Deposit End Time',
    finalBegintime: 'End payment start time',
    finalEndtime: 'End time of advance sale',
    title: 'theme',
    customerName: 'Customer Name',
    phone: 'Telephone',
    address: 'address',
    advanceDate: 'date',
    salePrice: 'price',
    advanceMoney: 'Amount of this receipt',
    payMode: 'Payment method',
    salePersonId: 'Salesman',
    postId: 'post',
    saleRepositoryId: 'Owned stores',
    createDate: 'Creation date',
    createDate2: 'Refund time',
    title2: 'theme',
    sourceNumber: 'Source list number',
    sourceType: 'Source single type',
    settleMode: 'Settlement Method',
    settleMoney: 'Settlement amount',
    returnMoney: 'Refundable amount'
  },
  SaleOut: {
    createDate: 'Creation date',
    title: 'theme',
    sourceType: 'Source single type',
    customerType: 'Customer Category',
    customerName: 'Customer Name',
    customerPhone: 'Customer telephone',
    outType: 'Exit type',
    salePersonId: 'Salesperson',
    saleType: 'Sales Category',
    sendDate: 'Date of delivery',
    closeType: 'Settlement Method',
    invoiceType: 'Billing type',
    payType: 'Payment method',
    transferPersonId: 'Carrier',
    saleRepositoryId: 'Depot Warehouse',
    address: 'Shipping address',
    customerAccount: 'Customer account',
    ridMoney: 'Pre-sale deduction',
    ridBikeMoney: 'Deduction of used car amount',
    receivableMoney: 'Amount Collected',
    outPersonId: 'Treasurer',
    outDate: 'Depot time',
    otherMoney: 'Total other expenses',
    pointSupport: 'Integral offset',
    couponSupport: 'Preferential Offset',
    isInvoice: 'Whether to invoice or not',
    heji1: 'Total quantity',
    // heji2: 'Total amount',
    // heji3: 'Total Included Tax',
    // heji4: 'Total tax',
    // heji5: 'Total discount',
    // heji6: 'Total amount of tax after discount',
    // heji7: 'Taxable Cost Amount',
    heji8: 'Total order cost',
    heji2: 'Deposit amount',
    heji3: 'Deposit amount',
    heji4: 'Total discount',
    heji9: 'Total gifts',
    heji10: 'Total amount of gifts',
    heji11: 'Total other expenses',
    profit: 'profit',
    ProfitMargin: 'Profit margin'
  },
  SaleOrder: {
    title: 'theme',
    customerType: 'Customer Category',
    customerName: 'Customer Name',
    customerPhone: 'Customer telephone',
    invoiceType: 'Billing type',
    payMode: 'Payment method',
    transDate: 'Delivery time',
    salePersonId: 'Salesman',
    saleRepositoryId: 'store',
    saleType: 'Sales Category',
    payType: 'Payment method',
    roleId: 'post',
    currency: 'currency',
    transAddress: 'Delivery address',
    receiveMoney: 'Amount Collected',
    colseType: 'Settlement Method',
    heji1: 'Total quantity',
    heji2: 'Total amount',
    heji3: 'Total Amount Including Tax',
    heji4: 'Total tax',
    heji5: 'Total discount',
    heji6: 'Total amount of tax after discount',
    heji7: 'Taxable Cost Amount',
    heji8: 'Total cost amount',
    heji9: 'Other expenses',
    backType: 'Payment status',
    backMoney: 'Amount of repayment',
    sendType: 'Delivery status'
  },
  SaleReturn: {
    title: 'theme',
    sourceType: 'Source single type',
    sourceNumber: 'Source Single Coding',
    customerName: 'Customer Name',
    customerPhone: 'Customer telephone',
    closeType: 'Settlement Method',
    exchangeRate: 'exchange rate',
    customerType: 'Customer type',
    payType: 'Payment method',
    salePersonId: 'Salesperson',
    receiveAddress: 'Receiving address',
    saleRepositoryId: 'store',
    returnDate: 'return date',
    currency: 'currency',
    heji1: 'Total quantity',
    heji2: 'Total amount',
    heji3: 'Total Amount Including Tax',
    heji4: 'Total tax',
    heji5: 'Total discount',
    heji6: 'Total amount of tax after discount',
    closeStatusId: 'Settlement status',
    alreadyMoney: 'Closed amount',
    enterStatusId: 'Storage',
    ridMoney: 'Payments receivable',
    actualReturnMoney: 'Actual refund amount',
    allMoney: 'Total amount'
  },
  SalePlan: {
    title: 'theme',
    planType: 'Plan Type',
    planDate: 'Planned date',
    beginTime: 'start time',
    endTime: 'Ending time',
    lowerPlanMoney: 'Minimum planned amount',
    planTotalMoney: 'Total Plan Amount',
    urgePlan: 'Incentive scheme',
    targetMoney: 'Planned amount',
    regionId: 'region',
    repositoryid: 'store',
    week: 'week',
    month: 'month',
    quarter: 'quarter'
  },
  SaleOpportunity: {
    title: 'theme',
    opportunityType: 'Types of Opportunities',
    customerType: 'Customer type',
    customerName: 'Customer Name',
    customerPhone: 'Customer telephone',
    opportunitySource: 'Sources of opportunity',
    handlePersonId: 'Salesman',
    deptId: 'Subordinate departments',
    handleRepositoryId: 'Owned stores',
    isSale: 'current state',
    createPersonName: 'Founder',
    createTime: 'Creation time'
  },
  SaleContract: {
    customerType: 'Customer type',
    title: 'Theme',
    sourceType: 'Source single type',
    sourceNumber: 'Source list number',
    customerName: 'Customer Name',
    customerPhone: 'Customer telephone',
    saleType: 'Sales Category',
    closeType: 'Settlement Method',
    payType: 'Payment method',
    deliveryMode: 'Mode of delivery',
    currency: 'currency',
    salePersonId: 'Salesman',
    deptId: 'Subordinate departments',
    saleRepositoryId: 'Owned stores',
    signDate: 'Signing time',
    signAddress: 'contracting place',
    contractStat: 'Contract status',
    invoiceType: 'Billing type',
    taxRate: 'exchange rate',
    allMoney: 'Amount of money',
    installmentCount: 'Number of stages',
    dayOfMonth: 'Monthly repayment date',
    installmentAllMoney: 'Total Amount in Stages',
    installmentBegintime: 'Starting time of stages',
    installmentEndtime: 'End of Stage',
    notaryPerson: 'Notary',
    notaryDate: 'Notarization Date',
    firstMoney: 'Down payment',
    eachMoney: 'Amount of repayment per instalment',
    uploadAttachments: 'Upload attachments'
  },
  AccessTools: {
    stat: 'state',
    title: 'Tool Acquisition Single Theme',
    applyDate: 'Application time',
    number: 'Request slip number',
    accessDate: 'Use time',
    applyPersonId: 'Applicant',
    providePersonId: 'Confirmer',
    deptId: ' Applicant Department',
    deptId2: ' Application Department',
    useType: ' Use type',
    emergencyLevel: ' Emergency',
    reason: ' Reasons for application',
    accessRepositoryId: ' Warehouse'
  },
  income: {
    title: 'theme',
    incomeDate: 'Date of collection',
    handlePersonId: 'Agent',
    closeType: 'Settlement Method',
    incomeAccount: 'Payment account',
    deptId: 'Departments',
    currency: 'currency',
    incomeRepositoryId: 'store'
  },
  Expenses: {
    title: 'theme',
    expensesDate: 'Expenditure Date',
    handlePersonId: 'Agent',
    closeType: 'Settlement Method',
    expensesAccount: 'Expenditure account',
    deptId: 'Departments',
    currency: 'currency',
    expensesRepositoryId: 'store'
  },
  Transfer: {
    title: 'theme',
    transferTicket: 'Transfer Number',
    transferDate: 'transfer date',
    transferMoney: 'Transfer amount',
    handlePersonId: 'Agent',
    transferOutAccount: 'Transfer account',
    transferOutBank: 'Transfer Bank',
    transferInAccount: 'Transfer to account',
    transferInBank: 'Transfer to Bank',
    currency: 'currency',
    taxRate: 'exchange rate'
  },
  Recycling: {
    title: 'theme',
    productCode: 'Recycled Item Code',
    productType: 'Specifications',
    color: 'colour',
    productCategory: 'category',
    locationId: 'Location',
    batch: 'batch',
    recyclingMoney: 'Amount recovered',
    recyclingDate: 'Recovery time',
    recyclingPersonId: 'Recycler',
    recyclingRepositoryId: 'Recycling stores',
    remark: 'Remarks',
    customerId: 'Customer Name',
    sexId: 'Gender',
    customerPhone: 'Telephone',
    provinceId: 'province',
    cityId: 'city',
    regionId: 'area',
    detailAddress: 'Detailed address',
    certificateType: 'Document type',
    certificateNumber: 'Certificate number',
    currency: 'currency',
    exchangeRate: 'exchange rate'
  },
  PrepReceipt: {
    title: 'theme',
    sourceType: 'Source single typ',
    sourceNumber: 'Source Single Coding',
    receiptMoney: 'Amount in advance',
    receiptDate: 'Date of collection',
    receiptPersonId: 'Payee',
    receiptAccount: 'Payment account',
    accountType: 'Account type',
    customerName: 'Customer Name',
    closeType: 'Settlement Method',
    currency: 'currency',
    remark: 'Remarks'
  },
  SmartReplenishment: {
  },
  InstallmentApply: {
    consultancyName: 'Full name',
    consultancyPhone: 'Telephone',
    consultancyAddress: 'address',
    address: 'Customer Address',
    monthlyIncome: 'Net monthly income',
    otherExpend: 'Other living expenses',
    monthlyDebt: 'Monthly fixed debt',
    allIncome: 'Total monthly income',
    otherIncome: 'Other income',
    salary: 'Monthly wages',
    taxNumber: 'Tax Identification Number',
    workType: 'Types of employment',
    enterpriseName: 'Employer/Company Name',
    workAddress: 'Employer/Company Address',
    currentPost: 'Current position',
    workTime: 'Employment duration',
    enterprisePhone: 'Company Telephone',
    email: 'Mail box',
    liveStauts: 'Living conditions',
    applyCellPhone: 'Mobile phone',
    mateLiveStauts: 'Living conditions of spouses',
    title: 'theme',
    firstName: 'name',
    middleName: 'Middle name',
    lastName: 'surname',
    applyPhone: 'Fixed telephone',
    age: 'Age',
    provinceId: 'province',
    cityId: 'city',
    currentAddress: 'Current address',
    permanentAddress: 'Permanent address',
    gender: 'Gender',
    birthday: 'Date of birth',
    marriageStat: 'Marital status',
    certificateType: 'Document type',
    certificateNumber: 'Certificate number',
    workStat: 'working condition',
    firstMoney: 'Down payment',
    installmentCount: 'Number of stages',
    totalMoney: 'Total Amount in Stages',
    // installmentDays: 'Days of first instalment collection',
    installmentDays: 'Date of repayment',
    saleRepositoryId: 'Sales Store',
    salePersonId: 'Salesperson',
    applyDate: 'Date of application',
    productCode: 'Item Coding',
    productName: 'Name of article',
    color: 'colour',
    typeId: 'Specification type',
    unit: 'unit',
    categoryId: 'Classification of articles',
    kpiGrade: 'Performance score',
    point: 'Merchandise Integral',
    carCode: 'Frame Coding',
    motorCode: 'Motor Coding',
    batteryCode: 'Battery Coding',
    mateName: 'Full name',
    mateCertificateType: 'Document type',
    mateCertificateNumber: 'Certificate number',
    matePhone: 'Telephone',
    mateWorkStat: 'Working status',
    workProvinceId: 'province',
    workCityId: 'city',
    enterpriseNature: 'The Nature of Enterprises',
    enterprisePeoples: 'Number of enterprises',
    enterpriseContact: 'Corporate Contacts',
    suretyName: 'Name of Guarantor',
    suretyPhone: 'Name of Guarantor',
    relationship: 'relationship',
    suretyProvinceId: 'province',
    suretyCityId: 'city',
    suretyAddress: 'Detailed address',
    suretyCertificateType: 'Document type',
    suretyCertificateNumber: 'Certificate number',
    customerName: 'Customer Name'
  },
  InstallmentList: {
    applyNumber: 'Stage Application Number',
    customerName: 'Customer Name',
    customerPhone: 'Customer telephone',
    address: 'address',
    installmentMoney: 'Principal',
    totalMoney: 'Amount of money',
    leftMoney: 'Residual principal',
    paidCount: 'Number of repayments',
    count: 'Number of stages',
    rate: 'Interest rate',
    Interest: 'Interest amount',
    Repaymentdate: 'Date of repayment',
    Currentamount: 'Current Amount',
    Principal: 'Principal',
    reward: 'reward',
    Latefee: 'Late fee',
    status: 'Repayment status',
    productCode: 'Commodity Number',
    productName: 'Name of commodity',
    leftAllmoney: 'Remaining amount',
    pay: 'Amount received',
    unpay: 'Unpaid amount',
    Overdueamount: 'Overdue amount',
    Overduefrequency: 'Number of overdue',
    collectperson: 'Payee',
    collectstatus: 'Payment status',
    actualDate: 'Date of collection'
  },
  ChangeCount: {
    title: 'theme',
    sourceType: 'Source single type',
    sourceNumber: 'Source single code',
    customerId: 'Customer Name',
    customerPhone: 'Customer telephone',
    totalMoney: 'Total Amount in Stages',
    beforeCount: 'Pre-revision period',
    paidCount: 'Number of repayments',
    paidMoney: 'Amount paid back',
    paidCapital: 'Repaid principal',
    remainCapital: 'Residual principal',
    afterCount: 'Number of periods after modification',
    saleRepositoryId: 'Sales Store'
  },
  CollectList: {
    customerName: 'Customer Name',
    carCode: 'Frame Coding',
    count: 'Number of stages',
    motorCode: 'Motor Coding',
    batteryCode: 'Battery Coding',
    interestMoney: 'Interest on repayment',
    deadline: 'Reimbursement deadline',
    shouldMoney: 'Amount of receivables',
    capitalMoney: 'Repayment principal',
    actualDate: 'Date of repayment',
    pay: 'Amount of receivables',
    unpay: 'Unpaid amount',
    stat: 'state'
  },
  AgentCollect: {
    agentName: 'Name of distributor',
    saleRepositoryId: 'Sales Store',
    shouldMoney: 'Amount of receivables',
    discountMoney: 'Discount',
    returnMoney: 'Return deduction',
    collectedMoney: 'Amount received',
    uncollectedMoney: 'Unpaid amount',
    stat: 'state',
    Receivables: 'Collection'
  },
  InstallmentrateList: {
    id: 'Serial number',
    count: 'Number of stages',
    stat: 'state',
    installmentCount: 'Number of stages',
    rate: 'Customer Interest Rate',
    isEffective: 'Enabled state',
    overdueDay: 'Overdue days',
    rate2: 'Late fee',
    advanceDay: 'Days in advance',
    rewardMoney: 'reward',
    createPersonName: 'Founder'
  },
  Collection: {
    title: 'Receiving ticket theme',
    customerId: 'Customer Name',
    address: 'address',
    receivePersonId: 'Receiver',
    receiveDate: 'Receiving Date',
    receiveReason: 'Reasons for car closure',
    customerPhone: 'Telephone',
    customerName: 'Customer Name',
    number: 'Order Number',
    retreatRepositoryId: 'store'
  },
  CustomerSurveyReport: {
    number: 'Investigation Report Number',
    title: 'theme',
    sourceType: 'Source single type',
    sourceNumber: 'Source list number',
    customerName: 'Customer Name',
    surveyDate: 'Date of investigation',
    surveyPersonId: 'Investigator',
    liveStatus: 'Living conditions',
    liveType: 'Residential type',
    personalProperty: 'personal property',
    result: 'result',
    reason: 'Reason'
  },
  Receipt: {
    title: 'theme',
    number: 'Payment receipt number',
    customerType: 'Customer type',
    customerId: 'Customer Name',
    moneyType: 'currency',
    receiptMoney: 'Amount Collected',
    receiptType: 'payment method',
    receiptAccount: 'Payment account',
    receiptAccountNumber: 'Account number',
    receiptPersonId: 'Payee',
    receiptDate: 'Date of collection',
    totalLackMoney: 'Total arrears',
    remark: 'Remarks',
    penaltyMoney: 'Amount of late payment',
    deductionMoney: 'Advance deduction',
    allShouldMoney: 'Amount receivable'
  },
  CustomerMarketing: {
    chatNumber: 'Negotiation Number',
    title: 'theme',
    customerId: 'Customer Name',
    handlePersonId: 'Our contact person',
    phase: 'stage',
    chatMode: 'Ways of negotiation',
    chatDate: 'Date of negotiation',
    actionDesc: 'Action description',
    customerReturn: 'Customer Feedback',
    remarks: 'Remarks',
    title2: 'theme',
    handlePersonId2: 'Visitors',
    visitReson: 'Subject matter of return visit',
    visitMode: 'Method of return visit',
    visitDate: 'Date of return visit',
    content: 'Contents of the Return Visit',
    visitNumber: 'Return Number'
  },
  GroupBuyRules: {
    title: 'theme',
    minPeoples: 'Minimum number',
    captainRate: 'The proportion of the head price to the actual price',
    memberRate: 'Ratio of membership price to actual price',
    beginTime: 'Activity start time',
    endTime: 'End time of activity',
    isEffective: 'Application status'
  },
  Getauthority: {
    rolename: 'Role Name',
    createTime: 'Creation time',
    createPersonName: 'Founder'
  },
  DeliverGoods: {
    title: 'theme',
    sourceType: 'Source single type',
    sourceNumber: 'Source list number',
    requireArriveDate: 'Required delivery date',
    deliverDept: 'Distribution Department',
    deliverPersonId: 'Distributor',
    requireType: 'Type of goods to be ordered',
    requireId: 'Demander',
    stat: 'Business status',
    address: 'address',
    deliverNumber: 'Distribution Order Number'
  },
  CarStatList: {
    carnumber: 'Vehicle Number',
    licencenumber: 'car number',
    carName: 'Vehicle Name',
    carStat: 'Vehicle status',
    carType: 'Vehicle model',
    outPersonId: 'Driver',
    stat: 'state',
    driverNames: 'Driver',
    outTime: 'Last departure time',
    returnTime: 'Time of last return',
    orderType: 'Order type',
    orderNumber: 'Order Number',
    address: 'Delivery address',
    outTime2: 'Departure time',
    outPersonPhone: 'Telephone'
  },
  ReturnExchange: {
    title: 'theme',
    sourceType: 'Source single type',
    sourceNumber: 'Source list number',
    customerType: 'Customer type',
    customerId: 'Customer Name',
    customerPhone: 'Customer telephone',
    sourceMoney: 'Vehicle Amount',
    diffMoney: 'Difference Amount',
    applyNumber: 'Stage Application Number',
    handlePersonId: 'Shipper',
    exchangeDate: 'Exchange time',
    repositoryId: 'Warehouse',
    exchangeNumber: 'Exchange Bill Number'
  },
  Package: {
    packageName: 'Combination name',
    isEffective: 'Application status',
    productName: 'Name of main commodity',
    createPersonName: 'Founder',
    createDate: 'Creation time'
  },
  ProductCost: {
    accountTime: 'Accounting period',
    productName: 'Product Name',
    productCode: 'Product Coding',
    accountType: 'Accounting methods',
    completeRate: 'Completion Ratio',
    isInput: 'Is it a one-time investment',
    finishQuantity: 'Quantity of Completion',
    producingQuantity: 'In Product Quantity',
    producingMaterialsQuantity: 'Direct Material Quota in Products',
    producingSalary: 'Wage quota for products',
    producingCost: 'Cost Quota for Manufacturing Products',
    finishMaterialsUsedQuantity: 'Direct Material Consumption Quota for Completed Products',
    finishWorkHours: 'Man-hour Consumption Quota for Completed Products',
    endMaterialsQuantity: 'Direct Material Consumption Quota for Products at the End of Month',
    endWorkHours: 'Man-hour consumption quota for products at the end of the month',
    currency: 'currency'
  },
  SmartReplenishmentList: {
    productCode: 'Commodity Number',
    productName: 'Name of commodity',
    repositoryName: 'Name of store',
    unit: 'unit',
    existStock: 'Existing stock',
    onStock: 'transportation inventory',
    upStock: 'Maximum inventory',
    downStock: 'safety stock',
    salesDay: 'Average daily sales',
    Days: 'Saleable days',
    isMove: 'Whether to replenish',
    Storagemove: 'allocation',
    adviceQuantity: 'Suggested replenishment quantity'
  },
  InventoryReplenishment: {
    id: 'number',
    Repository: 'Warehouse',
    replenishmentCycle: 'Replenishment cycle (days)',
    normalTime: 'Normal time (days)',
    emergencyTime: 'Emergency time (day)',
    iseffective: 'Enabled state'
  },
  public: {
    businessStatus: 'Business status',
    rate: 'exchange rate',
    up: 'On the shelf',
    down: 'Undercarriage',
    createPersonName2: 'Maker',
    createDate2: 'Make time',
    cancel: 'cancel',
    save: 'Preservation',
    modifyDate: 'Last update time',
    move: 'Input confirmation',
    judgePersonName: 'Auditor',
    judgeDate: 'Audit Date',
    modifyPersonName: 'Last Update',
    endPersonName: 'Bill holder',
    endDate: 'Statement date',
    createPersonName: 'Founder',
    judgeStat: 'Audit status',
    receiptStat: 'Document Status',
    review: 'To examine',
    id: 'number',
    uploadimage: 'upload',
    address: 'address',
    regionId: 'region',
    countyrId: 'Country',
    createDate: 'Creation date',
    provinceId: 'province',
    cityId: 'city',
    search: 'query',
    rest: 'Reset',
    filter: 'More Query Conditions',
    batchoperation: 'Batch operation',
    add: 'Newly added',
    export: 'export',
    print: 'Printing',
    contract: 'Generation of contract',
    actions: 'operation',
    edit: 'modify',
    disable: 'Discontinuation',
    enable: 'Discontinuation',
    delete: 'delete',
    email: 'mailbox',
    male: 'man',
    female: 'female',
    addTo: 'Add to'
  },
  area: {
    SerialNumber: 'Serial number',
    AreaName: 'Area name',
    level: 'level',
    Manager: 'Manager',
    CreationTime: 'Creation time',
    Founder: 'Founder',
    Operation: 'operation',
    addAreas: 'New areas',
    ok: 'confirm',
    cancel: 'cancel',
    Inclusivearea: 'Containment area',
    editarea: 'Modification area',
    delete: 'delete',
    repositoryId: 'Warehouse/store'
  },
  repair: {
    servicemode: 'Maintenance mode',
    Employeetracks: 'Employee Trajectory',
    terminate: 'End',
    customername: 'Customer Name',
    coding: 'Maintenance Number',
    phone: 'Customer telephone',
    stat: 'state',
    Repairaddress: 'Maintenance address',
    Warrantytime: 'Repair time',
    Dispatched: 'Assigned',
    Dispatch: 'Assignment',
    add: 'New maintenance orders',
    model: 'Vehicle model',
    RepairLocation: 'Maintenance site',
    projectName: 'entry name',
    price: 'Price (yuan)',
    description: 'describe',
    mark: 'Performance score',
    createTime: 'Creation time',
    staffName: 'Name of Employee',
    staffphone: 'Employee Telephone',
    taskname: 'Task Name',
    taskaddress: 'Task Address',
    taskcontent: 'Task content',
    createName: 'Founder',
    result: 'Result',
    dispatch_staff: 'roster staff',
    customerphone: 'Customer telephone',
    AllocationTimeDifference: 'Allocation time difference',
    branchDelayTime: 'Shop Delay Time Difference',
    partName: 'Part name',
    solution: 'Solution',
    solution2: 'Problem Solutions',
    EmployeeGuidance: 'Employee guidance',
    branch: 'store',
    Name: 'Customer name',
    all: 'Full order',
    NotAssigned: 'To be distributed',
    Assigned: 'Arranged',
    TobeRepaired: 'To be repaired',
    Repairing: 'Maintenance in progress',
    Finished: 'Completed',
    evaluated: 'Evaluated',
    Cancelled: 'Cancelled',
    ServiceDetails: 'Details of maintenance',
    Ordernumber: 'Order Number',
    OrderStatus: 'Order status',
    CustomerInfo: 'Customer Information',
    CustomerName2: 'Customer Name',
    CP: 'Telephone',
    address: 'address',
    ServiceInfo: 'Maintenance information',
    UnitModel: 'Vehicle model',
    DefectiveParts: 'Part of the problem',
    ExpectedServiceBranch: 'Expect to repair stores',
    ExpectedServiceTime: 'Expected maintenance time',
    Description: 'Text Description',
    ProcessingInfo: 'process information',
    EmployeeName: 'Name of Employee',
    ServiceQuality: 'Maintenance quality',
    ServiceAttitude: 'Service Attitude',
    ServiceItemsPriceList: 'Price List of Maintenance Projects',
    ServiceItems: 'Maintenance project',
    Price: 'Price',
    KPI: 'Achievements',
    ServicePartsPriceList: 'Price List of Maintenance Parts',
    ServiceParts: 'Maintenance components',
    Qty: 'Number',
    Totalcost: 'Total expenditure',
    Discountrate: 'Discount rate',
    Discountamount: 'Amount of discount',
    Actualamount: 'Actual amount',
    ServiceTracking: 'Maintenance tracking',
    ok: 'Determine',
    cancel: 'cancel',
    Dispatch2: 'Assignment of maintenance orders',
    Add: 'Newly added',
    Model: 'Vehicle model',
    Parts: 'Maintenance site',
    LoginAccount: 'Login account',
    Name2: 'Contact name',
    MobileNumber: 'Contact number',
    Address2: 'Customer Address',
    ExpectedTime: 'Expected time',
    Servicebranch: 'Maintenance shop',
    Description2: 'Problem Description',
    edit: 'Modification of maintenance orders',
    dingdan: 'Maintenance orders',
    Employee: 'staff',
    delete: 'delete',
    new: 'Additional tasks',
    assignstaff: 'roster staff',
    Customerphone: 'Customer telephone',
    NameofParts: 'Part name',
    CreationDate: 'Creation date',
    action: 'operation',
    Addafirstlevel: 'Adding a first-order site',
    Addasecondarypart: 'Adding secondary parts',
    SerialNumber: 'Serial number',
    itemName: 'Part name',
    price2: 'Price (yuan)',
    Description3: 'describe',
    Additem: 'New Maintenance Projects',
    KPIScore: 'Performance score',
    itemName2: 'entry name',
    itemModification: 'Project modification',
    Manual: 'Self-inspection Manual',
    Addlevel1: 'Adding a Level 1 Self-Examination Site',
    NameofParts2: 'Location Name',
    Addlevel2: 'Adding Second Self-Inspection Location',
    edit2: 'modify',
    repositoryId: 'number',
    repositoryName: 'Name of store',
    total: 'Total Tasks',
    index: 'number',
    unfinished: ' not finished',
    gonging: 'Ongoing',
    submit: 'To be distributed',
    assigned: 'Arranged',
    repair: 'o be repaired',
    begin: 'under repair',
    finished: 'Completed',
    comment: 'Evaluated'
  },
  employee: {
    store: 'store',
    name: 'Full name',
    stat: 'state',
    area: 'region',
    Jobnumber: 'Work Number',
    personName: 'Full name',
    repositoryName: 'store',
    userName: 'Account number',
    birthday: 'Birthday',
    gender: 'Gender',
    male: 'man',
    female: 'woman',
    createTime: 'hiredate',
    roleName: 'role',
    employeeId: 'Rank',
    rolename: 'Role Name',
    kpiGrade: 'Score this month',
    id: 'Serial number',
    ruleName: 'Rule Name',
    mark: 'Fraction',
    createTimerule: 'Creation time',
    editemployee: 'Modification of Employees',
    addemployees: 'New Employees',
    loginaccount: 'Login account',
    ChangePassword: 'Change Password',
    password: 'Password',
    cellphone: 'Cell-phone number',
    email: 'mailbox',
    affiliatedarea: 'Areas to which they belong',
    affiliatedbranch: 'Owned stores',
    changearea: 'Modification area',
    changebranch: 'Change stores',
    changeposition: 'Change roles',
    changestatus: 'Change status',
    cancel: 'cancel',
    ok: 'Determine',
    Employeeinformation: 'Employee Information',
    Selectbranch: 'Choose stores',
    Scopeofauthority: 'Scope of authority',
    employeeinfo: 'Employee Information',
    employeedetail: 'Employee details',
    employeetracks: 'Employee Trajectory',
    employeenumber: 'Work Number',
    contactnumber: 'Telephone',
    dateemployed: 'Initiation time',
    account: 'Account number',
    Totalscore: 'Total score for the month',
    praise: 'Comments this month',
    Deductions: 'Penalty deduction',
    performancedetail: 'Details of Employee Performance',
    trendofperformance: 'Trends in performance scores this month',
    delete: 'delete',
    editperformancerules: 'Modification of performance rules'
  },
  table: {
    dynamicTips1: 'Fixed headers, sorted by header order',
    dynamicTips2: 'Unfixed headers, sorted by click order',
    dragTips1: 'Default order',
    dragTips2: 'Drag-and-drop sequence',
    title: 'Title',
    importance: 'Importance',
    type: 'type',
    remark: 'Comment',
    search: 'search',
    add: 'Add to',
    export: 'export',
    reviewer: 'Auditor',
    id: 'Serial number',
    date: 'time',
    author: 'author',
    readings: 'Reading Number',
    status: 'state',
    actions: 'operation',
    edit: 'edit',
    publish: 'Release',
    draft: 'draft',
    delete: 'delete',
    cancel: 'cancel',
    confirm: 'Determine'
  },
  lostUnits: {
    username: 'User name',
    coding: 'Vehicle Coding',
    name: 'Full name',
    tel: 'Cell-phone number',
    stat: 'state',
    employeeName: 'La Negro',
    description: 'describe',
    modifyTime: 'Blackening time',
    loststat: 'Lost state',
    losttime: 'Lost time',
    Serialnumber: 'Serial number',
    cancel: 'cancel',
    ok: 'Determine'
  },
  table2: {
    coding: 'Product Coding',
    productName: 'Name of commodity',
    price: 'Price',
    addedTime: 'Shelf time',
    inStock: 'Stock',
    dismountedTime: 'Off-shelf time',
    shelf: 'On the shelf',
    Obtained: 'Undercarriage',
    view: 'See',
    actions: 'operation',
    edit: 'modify',
    delete: 'delete',
    cancel: 'cancel',
    search: 'search',
    confirm: 'Determine',
    status: 'state',
    carName: 'Name of commodity',
    all: 'whole',
    stock: 'Out of stock',
    'product-name': 'Name of commodity',
    'Vehicle-model': 'Vehicle model'
  },
  Complaint: {
    Complainant: 'Complainant',
    phone: 'Telephone',
    all: 'Full order',
    id: 'Serial number',
    userName: 'Complainant',
    subject: 'Title of complaint',
    createTime: 'Complaint time',
    handlerName: 'Handler',
    stat: 'state',
    seen: 'See',
    delete: 'delete',
    dispatch: 'Assignment',
    finish: 'Completed',
    Dispatched: 'Assigned',
    toassign: 'To be assigned',
    actions: 'operation',
    pending: 'To be processed',
    assigned: 'Arranged personnel',
    evaluated: 'To be evaluated',
    addComplaint: 'Adding complaints',
    Details: 'Complaint details',
    User: 'user',
    ok: 'Determine',
    cancel: 'cancel',
    dispatching: 'assign repair order',
    SelectArea: 'Selection area',
    SelectBranch: 'Choose stores',
    Employee: 'staff',
    ComplaintDetails: 'Details of maintenance',
    OrderNumber: 'Order Number',
    OrderStatus: 'Order status',
    CustomerInfo: 'Customer Information',
    CustomerName: 'Customer Name',
    Account: 'Account number',
    ComplaintInfo: 'Complaint information',
    ComplaintTitle: 'Title of complaint',
    ComplaintDescription: 'Complaint Description',
    processInfo: 'process information',
    EmployeeName: 'Name of Employee',
    Role: 'role',
    ProcessTime: 'processing time',
    ProcessResult: 'Processing results',
    evaluation: 'evaluate'
  }
}

